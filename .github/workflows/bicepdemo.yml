name: '1 - Plan & Apply'

on:
  workflow_dispatch:
    inputs:
      PlanApply:
        description: 'Set to 0 to only run plan; set to 1 to run plan & apply'
        required: true
        default: '0'
  push:
    branches: [ '*' ]


jobs:
  Plan:
    name: 'Plan'
    runs-on: ubuntu-latest
    environment:
        name: 'Plan'
    env:
      RG: bicep-test
      LOCATION: EastUS2
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash


    steps:
    # Checkout the repository to the GitHub Actions runner 
    - name: Checkout
      uses: actions/checkout@v2
    - name: 'Az CLI login'
      uses: azure/login@v1
      with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}


    - name: "What-if Deploy"
      uses: Azure/cli@v1
      with:
        # Specify the script here
        inlineScript: |
          az group list -o table
          az deployment group create -g $RG -n vm -f main.bicep --parameters adminPassword=${{ secrets.vmpwd }} --what-if 


   # - name: Setup tmate session
   #   uses: mxschmitt/action-tmate@v3
   #   timeout-minutes: 10



  Apply:
    name: 'Apply'
    runs-on: ubuntu-latest
    needs: 'Plan'
    environment:
        name: 'Apply'
    # Run Apply if commit was made to main branch, OR if this is a workflow_dispatch (manual) run with the PlanApply input set to 1
    if:  (github.ref == 'refs/heads/master' && github.event_name != 'workflow_dispatch') ||  ( github.event_name == 'workflow_dispatch' && github.event.inputs.PlanApply == '1' )
    env:
      RG: bicep-test
      LOCATION: EastUS2
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    - name: Deploy
      uses: Azure/cli@v1
      with:
        # Specify the script here
        inlineScript: |
          az deployment group create -g $RG -n vm -f main.bicep  -p adminPassword=${{ secrets.vmpwd }}
